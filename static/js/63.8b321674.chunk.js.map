{"version":3,"file":"static/js/63.8b321674.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/SelectList/SelectList.styled.js","components/SelectList/SelectList.jsx","components/Statistic/Chart/Chart.styled.js","components/Statistic/Chart/Chart.jsx","components/Statistic/DiagramTab/DiagramTab.styled.js","components/Statistic/DiagramTab/DiagramTab.jsx","components/Statistic/DiagramForm/DiagramForm.styled.js","components/Statistic/DiagramForm/DiagramForm.jsx","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.jsx","pages/DashboardPage/StatisticsPage/StatisticsPage.jsx","redux/transactions/trans-selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\n\nexport const BalanceContainer = styled.div`\n  height: 80px;\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 8px;\n  padding-left: 32px;\n  padding-right: 73px;\n  padding-bottom: 12px;\n  background-color: ${props => props.theme.bgPrimary2};\n  border-radius: 30px;\n\n  @media ${device.tabletBefore} {\n    margin-top: 12px;\n  }\n\n  @media ${device.tablet} {\n    min-width: 336px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n  @media ${device.desktop} {\n    margin-top: 32px;\n    margin-bottom: 32px;\n    min-width: 395px;\n  }\n\n  & p:first-child {\n    font-size: 12px;\n    color: #a6a6a6;\n  }\n\n  & p:last-child {\n    font-family: \"Poppins\", \"Montserrat\", \"Circe\";\n    font-size: 30px;\n  }\n`;\n\nexport const BalanceText = styled.span`\n  color: ${(props) => props.theme.reverseBlack};\n`;\n","import { useSelector } from \"react-redux\";\nimport { getBalance } from \"redux/auth/auth-selectors\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { BalanceContainer, BalanceText } from \"./Balance.styled\";\n\n\nconst Balance = () => {\n  const { t } = useTranslation();\n  const balance = useSelector(getBalance);\n\n  return (\n    <BalanceContainer>\n      <p>{t('balance.your_balance')}</p>\n      <p>\n        <BalanceText>&#8372; </BalanceText>\n        <BalanceText>{balance.toFixed(2)}</BalanceText>\n      </p>\n    </BalanceContainer>\n  );\n};\n\nexport default Balance;\n","import styled from 'styled-components';\nimport Select from 'react-select';\n\nimport { device } from 'styles/Media.variables';\n\nexport const CustomSelect = styled(Select)`\n  .react-select__control {\n    cursor: pointer;\n    width: 100%;\n    border-width: 0;\n    font-family: 'Circe';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    display: flex;\n    align-items: center;\n    background-color: ${props => props.theme.bgPrimary2};\n    color: #000000;\n\n    border-bottom: 1px solid #e0e0e0;\n    border-radius: 0;\n    &:hover {\n      border: none;\n      outline: none;\n    }\n\n    &--is-focused {\n      border: 1px solid #24cca7;\n      outline: none;\n    }\n\n    &__inValid {\n      border: 1px solid red;\n      border-radius: 0;\n    }\n    &__inValid .react-select__placeholder {\n      color: red;\n    }\n  }\n\n  .react-select__indicator-separator {\n    display: none;\n  }\n  .react-select__placeholder {\n    color: #bdbdbd;\n  }\n\n  .react-select__menu {\n    overflow: hidden;\n    background: #ffffff;\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    backdrop-filter: blur(25px);\n    border-radius: 20px;\n  }\n\n  .react-select__menu-list {\n    overflow: auto;\n    color: #000000;\n    &::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n  }\n\n  .react-select__option {\n    cursor: pointer;\n    font-weight: 400;\n    &:hover {\n      font-weight: 700;\n      color: #ff6596;\n      background-color: #ffffff;\n    }\n  }\n  .react-select__option--is-selected {\n    background-color: rgba(30, 9, 127, 0.4);\n  }\n  .css-t3ipsp-control {\n    box-shadow: none;\n  }\n\n  .react-select__indicator {\n    color: ${props => props.theme.reverseBlack};\n  }\n\n  .react-select__single-value {\n    color: ${props => props.theme.reverseBlack};\n  }\n`;\n\nexport const ChartSelect = styled(Select)`\n  margin-bottom: 20px;\n\n  @media ${device.tablet} {\n    display: inline-block;\n    &:first-child {\n      margin-right: 16px;\n      margin-bottom: 0px;\n    }\n  }\n\n  @media ${device.desktop} {\n    &:first-child {\n      margin-right: 31px;\n    }\n  }\n\n  .react-select__control {\n    cursor: pointer;\n    border-width: 0;\n    font-family: 'Circe';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n    display: flex;\n    align-items: center;\n    color: #000000;\n\n    background-color: transparent;\n    border: 1px solid ${props => props.theme.reverseBlack};\n    border-radius: 30px;\n\n    padding-top: 8px;\n    padding-right: 20px;\n    padding-bottom: 14px;\n    padding-left: 15px;\n\n    width: 280px;\n    height: 50px;\n\n    @media ${device.tablet} {\n      width: 160px;\n    }\n\n    @media ${device.desktop} {\n      width: 182px;\n    }\n\n    &:hover {\n      border: 1px solid #4a56e2;\n    }\n\n    &:hover .react-select__indicator {\n      color: #4a56e2;\n    }\n  }\n  .react-select__indicator-separator {\n    display: none;\n  }\n\n  .react-select__menu-list {\n    border-radius: 20px;\n    overflow: auto;\n  }\n\n  .react-select__menu {\n    background: rgba(255, 255, 255);\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    backdrop-filter: blur(25px);\n    border-radius: 20px;\n\n    width: 280px;\n\n    @media ${device.tablet} {\n      width: 160px;\n    }\n\n    @media ${device.desktop} {\n      width: 182px;\n    }\n  }\n\n  .react-select__menu-list {\n    color: #000000;\n\n    &::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n  }\n\n  .react-select__option {\n    cursor: pointer;\n    font-weight: 400;\n    height: 30px;\n    display: flex;\n    align-items: center;\n\n    /* &:hover {\n    font-weight: 700;\n    color: #ff6596;\n    background-color: #ffffff;\n  } */\n  }\n\n  .react-select__option--is-selected {\n    background-color: rgba(30, 9, 127, 0.4);\n  }\n\n  .react-select__indicator {\n    color: ${props => props.theme.reverseBlack};\n  }\n\n  .react-select__single-value {\n    color: ${props => props.theme.reverseBlack};\n  }\n`;\n","import { useEffect, useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport { CustomSelect, ChartSelect } from './SelectList.styled';\nimport { useTranslation } from \"react-i18next\";\n\nconst SelectList = ({ options, getCurrent, defaultValue, chart, onChange, type, ...another }) => {\n  const { t } = useTranslation();\n  const [lng, setLng] = useState('');\n\n  const currentLanguage = useSelector(state => state.language.language);\n  useEffect(()=>{\n    setLng(currentLanguage);\n  }, [lng, currentLanguage, defaultValue]);\n\n  const handleChange = selectedOption => {\n    getCurrent(selectedOption);\n  };\n\n\n  \n  return (\n    <>\n      {chart ?\n      <ChartSelect\n        classNamePrefix={'react-select'}\n        options={options}\n        onChange={handleChange}\n        defaultValue={defaultValue}\n      /> :\n      <CustomSelect\n        {...another}\n        classNamePrefix={'react-select'}\n        onChange={onChange}\n        options={options}\n        placeholder={`${t('reactSelect.categoryPlaceholder')}`}\n      />}\n    </>\n  );\n};\n\nexport default SelectList;\n","import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\n\nexport const StyledChart = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n    margin-left: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const StyledBalance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-weight: 700;\n  font-size: 18px;\n`;\n\nexport const Notification = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  width: 280px;\n  height: 280px;\n\n  border: 1px solid grey;\n  border-radius: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const Text = styled.p`\n  width: 250px;\n  text-align: center;\n  font-size: 18px;\n  color: ${props => props.theme.reverseBlack};\n`;\n\nexport const BalanceText = styled.span`\n  color: ${props => props.theme.reverseBlack};\n`;\n","import { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Trans } from 'react-i18next';\n\nimport {\n  StyledChart,\n  StyledBalance,\n  Notification,\n  BalanceText,\n  Text,\n} from './Chart.styled';\nimport { diargamColors } from '../../../styles/Variables';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst Chart = ({ transactions }) => {\n  const totalTrans = transactions.reduce((total, trans) => {\n    if (trans.type) {\n      return total;\n    }\n\n    return total + trans.sum;\n  }, 0);\n\n  let isExpensTrans = false;\n  let isIncomeTrans = false;\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n  if (expensesTrans.length !== 0) {\n    isExpensTrans = true;\n  }\n\n  const incomeTrans = transactions.filter(trans => trans.type === true);\n  if (incomeTrans.length !== 0 && expensesTrans.length === 0) {\n    isIncomeTrans = true;\n  }\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map(category =>\n    expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  );\n\n  const dataIncome = {\n    labels: [''],\n    datasets: [\n      {\n        label: 'Income',\n        data: [100],\n        backgroundColor: '#d0d0d0',\n        borderWidth: 0,\n        cutout: '85%',\n      },\n    ],\n  };\n\n  const dataExpens = {\n    labels: categories,\n    datasets: [\n      {\n        label: '% of Categories',\n        data: totalSums,\n        backgroundColor: diargamColors,\n        borderWidth: 0,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <>\n      {isIncomeTrans && (\n        <StyledChart>\n          <Doughnut data={dataIncome} />\n          <StyledBalance>\n            <div>\n              <BalanceText>&#8372; </BalanceText>\n              <BalanceText>{totalTrans.toFixed(2)}</BalanceText>\n            </div>\n          </StyledBalance>\n        </StyledChart>\n      )}\n      {isExpensTrans && (\n        <StyledChart>\n          <Doughnut data={dataExpens} />\n          <StyledBalance>\n            <div>\n              <BalanceText>&#8372; </BalanceText>\n              <BalanceText>{totalTrans.toFixed(2)}</BalanceText>\n            </div>\n          </StyledBalance>\n        </StyledChart>\n      )}\n      {!isIncomeTrans && !isExpensTrans && (\n        <Notification>\n          <Text>\n            <Trans i18nKey=\"chart.notification.text\">\n              You have no transactions in selected date yet. <br /> Please add\n              transaction or choose another date.\n            </Trans>\n          </Text>\n        </Notification>\n      )}\n    </>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\nimport { colorText, border, shadows } from '../../../styles/Variables';\n\nexport const TableContainer = styled.table`\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Category = styled.th`\n  padding-top: 16px;\n  padding-bottom: 15px;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  \n  background-color: ${props => props.theme.bgPrimary2};\n  color: ${props => props.theme.reverseBlack};\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n\n  &:first-child {\n    text-align: start;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  &:last-child {\n    text-align: end;\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: ${border.homeTabGrey};\n  box-shadow: ${shadows.diagramTabShadow};  \n`;\n\nexport const OperationCat = styled.td`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: start;\n  vertical-align: middle;\n`;\n\nexport const OperationSum = styled.td`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  vertical-align: middle;\n  \n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const CellInner = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.reverseBlack};\n`;\n\nexport const Square = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: ${(params) => params.color};\n  \n  margin-right: 16px;\n\n  display: inline-block;\n`;\n\nexport const Totals = styled.p`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: ${props => props.theme.reverseBlack};\n\n  margin-top: 15px;\n  margin-left: 20px;\n  margin-right: 20px;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Expense = styled.span`\n  text-align: right;\n  color: ${colorText.red};\n`;\n\nexport const Income = styled.span`\n  text-align: right;\n  color: ${colorText.green};  \n`;","import { useTranslation } from \"react-i18next\";\n\nimport {\n  TableContainer,\n  Category,\n  TableRow,\n  OperationCat,\n  OperationSum,\n  Square,\n  Totals,\n  Expense,\n  Income,\n  CellInner,\n} from './DiagramTab.styled';\nimport { diargamColors } from '../../../styles/Variables';\n\nconst DiagramTab = ({ transactions }) => {\n  const { t } = useTranslation();\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map((category, i) => ({\n    id: i,\n    category,\n    color: diargamColors[i],\n    totalSum: expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  }));\n\n  const expense = expensesTrans.reduce((total, trans) => {\n    return total + trans.sum;\n  }, 0);\n\n  const income = transactions\n    .filter(trans => trans.type === true)\n    .reduce((total, trans) => {\n      return total + trans.sum;\n    }, 0);\n\n  return (\n    <>\n      <TableContainer>\n        <thead>\n          <tr>\n            <Category>{t('diagramTab.tableContainer.category')}</Category>\n            <Category>{t('diagramTab.tableContainer.sum')}</Category>\n          </tr>\n        </thead>\n        <tbody>\n          {totalSums.map(({ id, category, totalSum, color }) => {\n            const res = category.split(' ').join('');\n            return (\n              <TableRow key={id}>\n                <OperationCat>\n                  <CellInner>\n                    <Square color={color} />\n                    {t(`categories.${res}`)}\n                  </CellInner>\n                </OperationCat>\n                <OperationSum>\n                  <CellInner>\n                    {totalSum.toFixed(2)}\n                  </CellInner>\n                </OperationSum>\n              </TableRow>\n            );\n          })}\n        </tbody>\n      </TableContainer>\n      <div>\n        <Totals>\n        {t('diagramTab.totals.expenses')}<Expense>{expense.toFixed(2)}</Expense>\n        </Totals>\n        <Totals>\n        {t('diagramTab.totals.income')}<Income>{income.toFixed(2)}</Income>\n        </Totals>\n      </div>\n    </>\n  );\n};\n\nexport default DiagramTab;","import { Form } from 'formik';\nimport styled from \"styled-components\";\n\nexport const FormContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const StyledForm = styled(Form)`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 20px;\n`;","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport SelectList from 'components/SelectList/SelectList';\nimport { FormContainer, StyledForm } from './DiagramForm.styled';\nimport { monthNamesEn, monthNamesUa } from '../../../styles/Variables';\n\nconst DiagramForm = ({ setDate, date, months, years }) => {\n  const [lng, setLng] = useState('');\n\n  const currentLanguage = useSelector(state => state.language.language);\n\n  useEffect(() => {\n    setLng(currentLanguage);\n  }, [lng, currentLanguage]);\n\n  const currentMonthNames = i => {\n    if (currentLanguage === 'en') {\n      return monthNamesEn[i];\n    }\n\n    if (currentLanguage === 'ua') {\n      return monthNamesUa[i];\n    }\n  };\n\n  const optionsMonths = months.map((month, i) => ({\n    value: i + 1,\n    isDisabled: !month,\n    label: currentMonthNames(i),\n  }));\n\n  const setMonth = e => {\n    setDate(prevState => {\n      return { ...prevState, month: e.value };\n    });\n  };\n\n  const optionsYears = years\n    .reverse()\n    .map(year => ({ value: year, label: year }));\n  const setYear = e => {\n    setDate(prevState => {\n      return { ...prevState, year: e.value };\n    });\n  };\n\n  return (\n    <FormContainer>\n      <Formik initialValues={{ month: '', year: '' }}>\n        <StyledForm>\n          <SelectList\n            options={optionsMonths}\n            chart\n            defaultValue={{\n              label: currentMonthNames(date.month - 1),\n              value: date.month,\n            }}\n            getCurrent={setMonth}\n          />\n          <SelectList\n            options={optionsYears}\n            chart\n            defaultValue={{\n              label: date.year,\n              value: date.year,\n            }}\n            getCurrent={setYear}\n          />\n        </StyledForm>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default DiagramForm;\n","import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\nimport { font } from '../../styles/Variables';\n\nexport const Title = styled.h1`\n  font-family: ${font.title};\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 45px;\n  color: ${props => props.theme.title};\n\n  margin-top: 40px;\n  margin-bottom: 8px;\n\n  @media ${device.tabletBefore} {\n    text-align: center;\n  }\n\n  @media ${device.tablet} {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n\n  @media ${device.desktop} {\n    margin-top: 32px;\n    margin-left: 20px;\n  }\n`;\n\nexport const StatisticContainer = styled.div`\n  padding-bottom: 48px;\n\n  @media ${device.tablet} {\n    display: flex;\n    justify-content: space-around;\n    padding-bottom: 28px;\n  }\n\n  @media ${device.desktop} {\n    margin-left: 70px;\n    padding-bottom: 44px;\n    gap: 32px;\n  }\n`;\n\nexport const Diagram = styled.div`\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n`;\n\nexport const ChartContainer = styled.div``;\n\nexport const TableContainer = styled.div`\n  width: 280px;\n\n  @media ${device.tabletBefore} {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media ${device.tablet} {\n    width: 336px;\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n    margin-top: 97px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useTranslation } from \"react-i18next\";\n\nimport { getStatistic, getDateArr } from 'redux/transactions/trans-selectors';\nimport { fetchStatistic } from 'redux/transactions/trans-operations';\n\nimport Chart from 'components/Statistic/Chart/Chart';\nimport DiagramTab from 'components/Statistic/DiagramTab/DiagramTab';\nimport DiagramForm from './DiagramForm/DiagramForm';\nimport { Title, StatisticContainer, TableContainer } from './Statistic.styled';\n\nconst Statistic = () => {\n  const { t } = useTranslation();\n  const [date, setDate] = useState(() => ({ month: (new Date().getMonth() + 1), year: new Date().getFullYear() }));\n\n  const dispatch = useDispatch();\n\n  const { year, month } = date;\n\n  useEffect(() => {\n      dispatch(fetchStatistic({ year: Number(year), month: Number(month) }));\n  }, [dispatch, month, year]);\n\n  const transactions = useSelector(getStatistic);\n\n  const dateArr = useSelector(getDateArr);\n\n  const years = Object.keys(dateArr || {});\n  const monthArr = Object.values(dateArr || {});\n\n  const months = years.includes(year) ? dateArr[year] : monthArr[monthArr.length - 1];\n\n  return (\n    <StatisticContainer>\n      <div>\n        <Title>{t('statistic.statisticContainer.title')}</Title>\n        <Chart transactions={transactions || []} />\n      </div>\n      <TableContainer>\n        <DiagramForm setDate={setDate} date={date} years={years} months={months || []}/>\n        <DiagramTab transactions={transactions || []} />\n      </TableContainer>\n    </StatisticContainer>\n  );\n};\n\nexport default Statistic;\n","import { useMediaQuery } from 'react-responsive';\n\nimport Header from 'components/Header/Header';\nimport Navigation from 'components/Navigation/Navigation';\nimport Statistic from 'components/Statistic/Statistic';\nimport Balance from 'components/Balance/Balance';\nimport Currency from 'components/Currency/Currency';\n\nimport { Container } from 'styles/Shared.styled';\nimport { BackgroundContainer, BlurContainer, Flex, Wrap } from '../DashboardPage.styled';\n\nconst StatisticsPage = () => {\n  const isTablet = useMediaQuery({ minWidth: 768 });\n\n  return (\n    <BackgroundContainer>\n      <BlurContainer>\n      <Header />\n      <Container>\n        <Flex>\n          <Wrap>\n            <Navigation current=\"statistics\" />\n            {isTablet && <Balance />}\n          </Wrap>\n          {isTablet && <Currency />}\n        </Flex>\n        <Statistic />\n      </Container>\n      </BlurContainer>\n    </BackgroundContainer>\n  );\n};\n\nexport default StatisticsPage;\n","export const getLoading = ({ transactions }) => transactions.loading;\nexport const getStatistic = ({ transactions }) => transactions.statistic.transactions;\nexport const getDateArr = ({ transactions }) => transactions.statistic.dateArr;\nexport const getTransactions = ({ transactions }) => transactions.transactions;\nexport const getTransactionsError = ({ transactions }) =>\n  transactions.error?.data?.message;\n  export const getLoadingAddTransaction = ({ transactions }) =>\n    transactions.loadingAddTrans;\n"],"names":["BalanceContainer","styled","props","theme","bgPrimary2","device","BalanceText","reverseBlack","t","useTranslation","balance","useSelector","getBalance","toFixed","CustomSelect","Select","ChartSelect","options","getCurrent","defaultValue","chart","onChange","another","type","useState","lng","setLng","currentLanguage","state","language","useEffect","classNamePrefix","selectedOption","placeholder","StyledChart","StyledBalance","Notification","Text","ChartJS","ArcElement","Tooltip","transactions","totalTrans","reduce","total","trans","sum","isExpensTrans","isIncomeTrans","expensesTrans","filter","length","categories","Set","map","category","name","totalSums","dataExpens","labels","datasets","label","data","backgroundColor","diargamColors","borderWidth","cutout","i18nKey","TableContainer","Category","TableRow","border","shadows","OperationCat","OperationSum","CellInner","Square","params","color","Totals","Expense","colorText","Income","i","id","totalSum","expense","income","res","split","join","FormContainer","StyledForm","Form","setDate","date","months","years","currentMonthNames","monthNamesEn","monthNamesUa","optionsMonths","month","value","isDisabled","optionsYears","reverse","year","initialValues","SelectList","e","prevState","Title","font","title","StatisticContainer","Date","getMonth","getFullYear","dispatch","useDispatch","fetchStatistic","Number","getStatistic","dateArr","getDateArr","Object","keys","monthArr","values","includes","isTablet","useMediaQuery","minWidth","Header","Navigation","current","Balance","Currency","getLoading","loading","statistic","getTransactions","getLoadingAddTransaction","loadingAddTrans"],"sourceRoot":""}