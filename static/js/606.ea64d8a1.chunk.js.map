{"version":3,"file":"static/js/606.ea64d8a1.chunk.js","mappings":"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","sources":["components/ModalErrors/ModalErrors.styled.js","components/ModalErrors/ModalErrors.jsx","components/Auth/LoginForm/LoginForm.jsx","pages/AuthPage/LoginPage/LoginPage.styled.js","pages/AuthPage/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled, { css, keyframes } from 'styled-components';\nimport { device } from 'styles/Media.variables';\n\nimport { ReactComponent as ModalCloseSvg } from 'images/svgs/modal-close.svg';\n\nconst scale = keyframes`\n  0% {\n  transform: scale(0.5);\n  }\n  100% {\n  transform: scale(1);\n  }\n`;\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  background-color: rgba(43, 43, 43, 0.3);\n  z-index: 12000;\n  pointer-events: auto;\n\n  &::-webkit-scrollbar {\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-shrink: 0;\n  -webkit-box-pack: center;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 100%;\n`;\n\nexport const OverlayClick = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  cursor: pointer;\n`;\n\nexport const Overlay = styled.div`\n  position: relative;\n\n  flex-direction: column;\n  min-width: 300px;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 16px;\n\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    flex-direction: row;\n    height: auto;\n  }\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  width: 280px;\n  min-height: 520px;\n  border-radius: 8px;\n  background-color: #ffffff;\n  box-shadow: 10px 10px 20px rgba(9, 30, 63, 0.2);\n\n  animation: ${scale} 0.3s cubic-bezier(0.39, 0.575, 0.565, 1) both;\n\n  @media (${device.mobileTablet}) {\n    width: 440px;\n  }\n\n  @media (${device.tablet}) {\n    width: 533px;\n    min-height: 616px;\n  }\n`;\n\nexport const ModalClose = styled(ModalCloseSvg)`\n  position: absolute;\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  top: 20px;\n  right: 20px;\n  stroke: #000000;\n\n  ${props =>\n    props.dark &&\n    css`\n      stroke: ${props => props.theme.reverseBlack};\n      fill: ${props => props.theme.reverseBlack};\n    `}\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nimport {\n  Overlay,\n  ModalWindow,\n  ModalClose,\n  Container,\n  OverlayClick,\n  Wrapper,\n} from './ModalErrors.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ toggleModal, children }) => {\n  const isTablet = useMediaQuery({ minWidth: 768 });\n\n  useEffect(() => {\n    window.document.body.classList.add('scroll-lock');\n    return () => window.document.body.classList.remove('scroll-lock');\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  });\n\n  const onOverlayClick = e => {\n    toggleModal();\n    if (e.target === e.currentTarget) {\n    }\n  };\n\n  const onKeyDown = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <Container className=\"container\">\n      <Wrapper className=\"wrapper\" isTablet={isTablet}>\n        <OverlayClick className=\"overlayClick\" onClick={onOverlayClick} />\n        <Overlay className=\"overlay\">\n          <ModalWindow>\n            <ModalClose onClick={toggleModal} />\n            {children}\n          </ModalWindow>\n        </Overlay>\n      </Wrapper>\n    </Container>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signin, signinWithToken } from 'redux/auth/auth-operations';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport Logo from 'components/Logo/Logo';\n// import Modal from 'components/Modal/Modal';\nimport Modal from 'components/ModalErrors/ModalErrors';\nimport { Button, StyledLink } from 'styles/Shared.styled';\nimport {\n  AuthContainer,\n  LogoWrapper,\n  FormWrapper,\n  StyledForm,\n  StyledLabel,\n  StyledField,\n  EmailLogo,\n  PasswordLogo,\n  EyeLogo,\n  AuthError,\n  ButtonWrapper,\n  GoogleLogo,\n  ButtonGoogle,\n} from '../Auth.styled';\n\nimport { getAuthError } from 'redux/auth/auth-selectors';\nimport { clearAuthError } from 'redux/auth/auth-slice';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport { emailRegexp } from '../../../variables/Regexp';\n\nconst LoginForm = () => {\n  const [inputType, setInputType] = useState('password');\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n\n  const authError = useSelector(getAuthError);\n\n  const token = searchParams.get('token');\n\n  if (token) {\n    dispatch(signinWithToken({ token }));\n  }\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .matches(emailRegexp, `${t('loginForm.email_matches')}`)\n      .required(`${t('loginForm.email_required')}`),\n    password: yup.string().required(`${t('loginForm.password_required')}`),\n  });\n\n  const onSubmit = values => {\n    dispatch(signin(values));\n  };\n\n  const handleModalClose = () => {\n    dispatch(clearAuthError());\n  };\n\n  const handleSetInputTypePush = () => {\n    setInputType('string');\n  };\n\n  const handleSetInputTypeUp = () => {\n    setInputType('password');\n  };\n\n  return (\n    <>\n      <AuthContainer>\n        <FormWrapper>\n          <LogoWrapper>\n            <Logo />\n          </LogoWrapper>\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ values, errors, touched, handleChange, handleSubmit }) => (\n              <StyledForm onSubmit={handleSubmit}>\n                <StyledLabel>\n                  <StyledField\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"E-mail\"\n                    value={values.name}\n                    onChange={handleChange}\n                  />\n                  <EmailLogo />\n                  {touched.email && errors.email && (\n                    <AuthError>{errors.email}</AuthError>\n                  )}\n                </StyledLabel>\n                <StyledLabel>\n                  <StyledField\n                    name=\"password\"\n                    type={inputType}\n                    placeholder={`${t('loginForm.password_placeholder')}`}\n                    value={values.name}\n                    required={true}\n                    onChange={handleChange}\n                  />\n                  <PasswordLogo />\n                  <EyeLogo\n                    onMouseDown={handleSetInputTypePush}\n                    onTouchStart={handleSetInputTypePush}\n                    onMouseUp={handleSetInputTypeUp}\n                    onTouchEnd={handleSetInputTypeUp}\n                  />\n                  {((errors.password && values.password) ||\n                    touched.password) && (\n                    <AuthError>{errors.password}</AuthError>\n                  )}\n                </StyledLabel>\n                <ButtonWrapper>\n                  <Button primary marginBotom=\"20px\" type=\"submit\">\n                    {t('loginForm.signInButton')}\n                  </Button>\n                  <StyledLink to=\"/signup\" outlined=\"true\">\n                    {t('loginForm.signUpButton')}\n                  </StyledLink>\n                  {/* <ButtonGoogle href=\"https://walletback-production.up.railway.app/api/users/google\"> */}\n                  <ButtonGoogle href=\"https://wallet-back-onrender.onrender.com/api/users/google\">\n                    <Trans i18nKey=\"loginForm.signInGoogle\">\n                      SIGN IN WITH\n                      <GoogleLogo />\n                      OOGLE\n                    </Trans>\n                  </ButtonGoogle>\n                </ButtonWrapper>\n              </StyledForm>\n            )}\n          </Formik>\n        </FormWrapper>\n      </AuthContainer>\n      {authError && (\n        <Modal toggleModal={handleModalClose} >\n          <ErrorMessage message={authError}></ErrorMessage>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default LoginForm;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const LoginImg = styled.img`\n\t@media ${device.tabletOnly} {\n    margin-right: 40px;\n\t\twidth: 261px;\n\t\theight: 250px;\n\t}\n\n\t@media ${device.desktop} {\n\t\tmargin-bottom: 32px;\n\t\twidth: 435px;\n\t\theight: 420px;\n\t}\n`;","import { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\n\nimport Loader from 'components/Loader/Loader';\nimport LoginForm from 'components/Auth/LoginForm/LoginForm';\nimport { Title } from 'styles/Shared.styled';\nimport { LoginImg } from './LoginPage.styled';\nimport {\n  AuthContainer,\n  StyledAuthForm,\n  AuthHero,\n  LanguageButtonContainer,\n  DarkThemeContainer,\n} from '../AuthPage.styled';\n\nimport { getFirstLoading, getLoading } from 'redux/auth/auth-selectors';\n\nimport { LanguagesSwitcher } from 'components/LanguagesSwitcher/LanguagesSwitcher';\nimport SigninTab from 'images/auth/SigninAppTab.png';\nimport SigninTab2x from 'images/auth/SigninAppTab@2x.png';\nimport SigninDesk from 'images/auth/SigninAppDesk.png';\nimport SigninDesk2x from 'images/auth/SigninAppDeskt@2x.png';\n\nconst LoginPage = () => {\n  const isntMobile = useMediaQuery({ minWidth: 768 });\n  const isFirstLoading = useSelector(getFirstLoading);\n\n  const loading = useSelector(getLoading);\n\n  return isFirstLoading ? (\n    <Loader />\n  ) : (\n    <>\n      {loading && <Loader />}\n      <StyledAuthForm>\n        <DarkThemeContainer>\n          <AuthContainer>\n            <LanguageButtonContainer>\n              <LanguagesSwitcher />\n            </LanguageButtonContainer>\n            {isntMobile && (\n              <AuthHero>\n                <div>\n                  <picture>\n                    <source\n                      media=\"(min-width: 1280px)\"\n                      srcSet={`${SigninDesk} 1x, ${SigninDesk2x} 2x`}\n                      type=\"image/png\"\n                    />\n                    <source\n                      media=\"(min-width: 768px)\"\n                      srcSet={`${SigninTab} 1x, ${SigninTab2x} 2x`}\n                      type=\"image/png\"\n                    />\n                    <LoginImg src={SigninTab} alt=\"Finance App\" />\n                  </picture>\n                </div>\n                <Title>Finance App</Title>\n              </AuthHero>\n            )}\n\n            <LoginForm />\n          </AuthContainer>\n        </DarkThemeContainer>\n      </StyledAuthForm>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["scale","keyframes","Container","styled","Wrapper","OverlayClick","Overlay","ModalWindow","device","ModalClose","ModalCloseSvg","props","dark","css","theme","reverseBlack","modalRoot","document","querySelector","toggleModal","children","isTablet","useMediaQuery","minWidth","useEffect","window","body","classList","add","remove","addEventListener","onKeyDown","removeEventListener","e","code","createPortal","className","onClick","target","currentTarget","useState","inputType","setInputType","t","useTranslation","dispatch","useDispatch","useSearchParams","searchParams","authError","useSelector","getAuthError","token","get","signinWithToken","validationSchema","yup","shape","email","matches","emailRegexp","required","password","handleSetInputTypePush","handleSetInputTypeUp","Logo","initialValues","onSubmit","values","signin","errors","touched","handleChange","handleSubmit","name","type","placeholder","value","onChange","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","primary","marginBotom","to","outlined","href","i18nKey","clearAuthError","ErrorMessage","message","LoginImg","isntMobile","isFirstLoading","getFirstLoading","loading","getLoading","Loader","LanguagesSwitcher","media","srcSet","SigninDesk","SigninDesk2x","SigninTab","SigninTab2x","src","alt"],"sourceRoot":""}