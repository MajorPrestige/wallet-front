{"version":3,"file":"static/js/674.be55d520.chunk.js","mappings":"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","sources":["components/Auth/RegistrationForm/RegistrationForm.jsx","pages/AuthPage/RegistrationPage/RegistrationPage.styled.js","pages/AuthPage/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signup } from 'redux/auth/auth-operations';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport Modal from 'components/Modal/Modal';\nimport Logo from 'components/Logo/Logo';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nimport { Button, StyledLink } from 'styles/Shared.styled';\nimport {\n  AuthContainer,\n  LogoWrapper,\n  FormWrapper,\n  StyledForm,\n  StyledLabel,\n  StyledField,\n  EmailLogo,\n  PasswordLogo,\n  AuthError,\n  ButtonWrapper,\n  UserLogo,\n  PasswordCheck,\n  GoogleLogo,\n  ButtonGoogle,\n} from '../Auth.styled';\n\nimport { getAuthError } from 'redux/auth/auth-selectors';\nimport { clearAuthError } from 'redux/auth/auth-slice';\nimport { emailRegexp, passwordRegexp } from '../../../variables/Regexp';\n\n// const emailRegexp = /^\\w+[\\w-.]*\\w@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/;\n\nconst RegistrationForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const authError = useSelector(getAuthError);\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .matches(emailRegexp, `${t('registrationForm.email_matches')}`)\n      .required(`${t('registrationForm.email_required')}`),\n    password: yup\n      .string()\n      .required(`${t('registrationForm.password_required')}`)\n      .min(6, `${t('registrationForm.password_min')}`)\n      .max(16, `${t('registrationForm.password_max')}`)\n      .matches(\n        passwordRegexp.lettersFull,\n        // /^.*(?=.{6,})((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n        `${t('registrationForm.password_matchesFull')}`,\n      )\n      .matches(\n        passwordRegexp.numbers,\n        // /^.*(?=.*\\d).*$/,\n        `${t('registrationForm.password_matchesNum')}`,\n      ),\n    confirmPassword: yup\n      .string()\n      .oneOf(\n        [yup.ref('password')],\n        `${t('registrationForm.confirmPassword_oneOf')}`,\n      )\n      .required(`${t('registrationForm.confirmPassword_required')}`),\n    firstName: yup\n      .string()\n      .max(12, `${t('registrationForm.firstName_max')}`)\n      .required(`${t('registrationForm.firstName_rquired')}`),\n  });\n\n  const checkPassword = password => {\n    if (password) {\n      if (password.length <= 16) {\n        if (\n          password.length > 5 &&\n          // /((?=.*[a-z]){1})((?=.*[A-Z]){1})/\n          (passwordRegexp.lettersShort.test(password) || /\\d/.test(password))\n        ) {\n          if (\n            // /(?=.{6,})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1})/\n            passwordRegexp.strong.test(password)\n          ) {\n            return 'strong';\n          }\n          return 'normal';\n        }\n      }\n      return 'week';\n    }\n  };\n\n  const onSubmit = ({ firstName, email, password }) => {\n    const value = {\n      name: firstName,\n      email,\n      password,\n    };\n\n    dispatch(signup(value));\n  };\n\n  const handleModalClose = () => {\n    dispatch(clearAuthError());\n  };\n\n  return (\n    <>\n      <AuthContainer>\n        <FormWrapper>\n          <LogoWrapper>\n            <Logo />\n          </LogoWrapper>\n\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              confirmPassword: '',\n              firstName: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ values, errors, touched, handleChange, handleSubmit }) => (\n              <StyledForm onSubmit={handleSubmit}>\n                <StyledLabel>\n                  <StyledField\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"E-mail\"\n                    value={values.name}\n                    onChange={handleChange}\n                  />\n                  <EmailLogo />\n                  {touched.email && errors.email && (\n                    <AuthError>{errors.email}</AuthError>\n                  )}\n                </StyledLabel>\n                <StyledLabel>\n                  <StyledField\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder={`${t(\n                      'registrationForm.password_placeholder',\n                    )}`}\n                    value={values.name}\n                    required={true}\n                    onChange={handleChange}\n                  />\n                  <PasswordLogo />\n                  {values.password && (\n                    <PasswordCheck security={checkPassword(values.password)}>\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </PasswordCheck>\n                  )}\n                  {((errors.password && values.password) ||\n                    touched.password) && (\n                    <AuthError>{errors.password}</AuthError>\n                  )}\n                </StyledLabel>\n                <StyledLabel>\n                  <StyledField\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder={`${t(\n                      'registrationForm.confirmPassword_placeholder',\n                    )}`}\n                    value={values.name}\n                    onChange={handleChange}\n                  />\n                  <PasswordLogo />\n                  {touched.confirmPassword && errors.confirmPassword && (\n                    <AuthError>{errors.confirmPassword}</AuthError>\n                  )}\n                </StyledLabel>\n                <StyledLabel>\n                  <StyledField\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder={`${t(\n                      'registrationForm.firstName_placeholder',\n                    )}`}\n                    value={values.name}\n                    onChange={handleChange}\n                  />\n                  <UserLogo />\n                  {(touched.firstName ||\n                    (errors.firstName && values.firstName)) && (\n                    <AuthError>{errors.firstName}</AuthError>\n                  )}\n                </StyledLabel>\n                <ButtonWrapper>\n                  <Button primary marginBotom=\"20px\" type=\"submit\">\n                    {t('registrationForm.signUpButton')}\n                  </Button>\n                  <StyledLink to=\"/\" outlined=\"true\">\n                    {t('registrationForm.signInButton')}\n                  </StyledLink>\n                  <ButtonGoogle href=\"https://walletback-production.up.railway.app/api/users/google\">\n                    <Trans i18nKey=\"registrationForm.signInGoogle\">\n                      SIGN IN WITH\n                      <GoogleLogo />\n                      OOGLE\n                    </Trans>\n                  </ButtonGoogle>\n                </ButtonWrapper>\n              </StyledForm>\n            )}\n          </Formik>\n        </FormWrapper>\n      </AuthContainer>\n      {authError && (\n        <Modal toggleModal={handleModalClose} isSignIn={false}>\n          <ErrorMessage message={authError}></ErrorMessage>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const RegistrationImg = styled.img`\n\t\n\t@media ${device.tabletOnly} {\n\t\tmargin-right: 40px;\n\t\twidth: 274px;\n\t\theight: 250px;\n\t}\n\n\t@media ${device.desktop} {\n\t\tmargin-bottom: 32px;\n\t\twidth: 453px;\n\t\theight: 413px;\n\t}\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\n\nimport Loader from 'components/Loader/Loader';\n\nimport { LanguagesSwitcher } from 'components/LanguagesSwitcher/LanguagesSwitcher';\nimport RegistrationForm from 'components/Auth/RegistrationForm/RegistrationForm';\nimport { StyledAuthForm, AuthHero, AuthContainer, LanguageButtonContainer, DarkThemeContainer  } from '../AuthPage.styled';\nimport { RegistrationImg } from './RegistrationPage.styled';\nimport { Title } from 'styles/Shared.styled';\nimport FinanceTab from 'images/auth/FinanceTab.png';\nimport FinanceTab2x from 'images/auth/FinanceTab@2x.png';\nimport FinanceDesk from 'images/auth/FinanceDesk.png';\nimport FinanceDesk2x from 'images/auth/FinanceDesk@2x.png';\nimport { getLoading } from 'redux/auth/auth-selectors';\n\nconst RegistrationPage = () => {\n  const isntMobile = useMediaQuery({ minWidth: 768 });\n  const loading = useSelector(getLoading);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <StyledAuthForm>\n      <DarkThemeContainer>\n        <AuthContainer>\n        <LanguageButtonContainer><LanguagesSwitcher/></LanguageButtonContainer>\n        {isntMobile && (\n          <AuthHero>\n            <div>\n              <picture>\n                <source\n                  media=\"(min-width: 1280px)\"\n                  srcSet={`${FinanceDesk} 1x, ${FinanceDesk2x} 2x`}\n                  type=\"image/png\"\n                />\n                <source\n                  media=\"(min-width: 768px)\"\n                  srcSet={`${FinanceTab} 1x, ${FinanceTab2x} 2x`}\n                  type=\"image/png\"\n                />\n                <RegistrationImg src={FinanceTab} alt=\"Finance App\" />\n              </picture>\n            </div>\n            <Title>Finance App</Title>\n          </AuthHero>\n        )}\n        <RegistrationForm />\n        </AuthContainer>\n        </DarkThemeContainer>\n      </StyledAuthForm>\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["t","useTranslation","dispatch","useDispatch","authError","useSelector","getAuthError","validationSchema","yup","shape","email","matches","emailRegexp","required","password","min","max","passwordRegexp","confirmPassword","oneOf","firstName","checkPassword","length","test","Logo","initialValues","onSubmit","value","name","signup","values","errors","touched","handleChange","handleSubmit","type","placeholder","onChange","security","primary","marginBotom","to","outlined","href","i18nKey","Modal","toggleModal","clearAuthError","isSignIn","ErrorMessage","message","RegistrationImg","styled","device","isntMobile","useMediaQuery","minWidth","loading","getLoading","Loader","LanguagesSwitcher","media","srcSet","FinanceDesk","FinanceDesk2x","FinanceTab","FinanceTab2x","src","alt"],"sourceRoot":""}